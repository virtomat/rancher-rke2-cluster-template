# yamllint disable rule:document-start
# yamllint disable rule:line-length

# https://github.com/rancher/questions-yml-examples

questions:
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~ Section: General ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  - variable: configMode
    default: Simple
    description: 'Wizzard Configuration Mode'
    label: 'configMode'
    type: enum
    required: true
    options:
      - Simple
      - Advanced
    group: 'General'
  - variable: nodePoolTemplate
    default: SinglePool
    description: 'Select SinglePool to use one pool for all nodes and MultiPool (Not yet spported) for distinct Control Plane and Worker pools'
    label: 'nodePoolTemplate'
    type: enum
    required: true
    options:
      - SinglePool
      - MultiPool
    group: 'General'
  - variable: cluster.name
    default: mycluster
    description: 'Specify the name of the cluster'
    label: 'Cluster Name'
    required: true
    type: string
    group: 'General'
  - variable: cluster.labels
    label: 'labels'
    type: labels
    description: 'Cluster labels'
    group: 'General'
  - variable: cluster.annotations
    label: 'annotations'
    type: annotations
    description: 'Cluster annotations'
    group: 'General'
    show_if: configMode=Advanced
  - variable: cluster.description
    label: 'description'
    type: string
    description: 'Cluster Description'
    group: 'General'
  - variable: cluster.config.agentEnvs
    label: 'agentEnvs'
    type: string
    description: 'Cluster agentEnvs'
    group: 'General'
    show_if: configMode=Advanced
  - variable: cluster.config.cloudCredentialSecretName
    default: cc-openstack-generic
    description: 'CloudCredentialName for provisioning cluster'
    label: 'CloudCredential Name'
    type: cloudcredential
    group: 'General'
    show_if: configMode=Advanced
  - variable: cluster.config.defaultClusterRoleForProjectMembers
    label: 'defaultClusterRoleForProjectMembers'
    type: string
    description: 'Default cluster role for project members'
    group: 'General'
    show_if: configMode=Advanced
  - variable: cluster.config.defaultPodSecurityAdmissionConfigurationTemplateName
    label: 'defaultPodSecurityAdmissionConfigurationTemplateName'
    type: string
    description: 'Default pod security admission configuration template name'
    group: 'General'
    show_if: configMode=Advanced
  - variable: cluster.config.defaultPodSecurityPolicyTemplateName
    label: 'defaultPodSecurityPolicyTemplateName'
    type: string
    description: 'Default pod security policy template name'
    group: 'General'
    show_if: configMode=Advanced
  - variable: cluster.config.enableNetworkPolicy
    description: 'Enable network policy'
    label: 'enableNetworkPolicy'
    default: false
    type: boolean
    group: 'General'
    show_if: configMode=Advanced
  - variable: cluster.config.kubernetesVersion
    default: v1.30.4+rke2r1
    description: 'Specify Kubernetes Version'
    label: 'Kubernetes Version'
    type: enum
    required: true
    options:
      - v1.26.15+rke2r1
      - v1.27.16+rke2r1
      - v1.28.13+rke2r1
      - v1.29.8+rke2r1
      - v1.30.4+rke2r1
    group: 'General'

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~ Section: Auth Access Endpoint ~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  - variable: cluster.config.localClusterAuthEndpoint.enabled
    description: 'Enable Local Auth Access Endpoint'
    label: 'Local Auth Access Endpoint'
    default: false
    type: boolean
    group: 'Auth Access Endpoint'
    show_if: configMode=Advanced
    show_subquestion_if: true
    subquestions:
      - variable: localClusterAuthEndpoint.fqdn
        default:
        description: 'Local Auth Access Endpoint FQDN'
        label: 'Auth Endpoint FQDN'
        type: hostname
        group: 'Auth Access Endpoint'
      - variable: localClusterAuthEndpoint.caCerts
        default:
        label: 'Auth Endpoint Cacerts'
        description: 'Local Auth Access Endpoint CACerts'
        type: multiline
        group: 'Auth Access Endpoint'

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~ Section: Cluster Registries ~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # registries
  - variable: cluster.config.registries.enabled
    default: false
    type: boolean
    group: 'Cluster Registries'
    show_if: configMode=Advanced
    show_subquestion_if: true
    subquestions:
      - variable: registries.configs # list
#        group: 'Cluster Config'
        # authConfigSecretName
        # caBundle
        # insecureSkipVerify
        # tlsSecretName
      - variable: registries.mirrors # list
#        group: 'Cluster Config'
        # endpoints
        # rewrite # dict list

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~ Section: Upgrade Strategy ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # upgrade strategy
  - variable: cluster.config.upgradeStrategy.enabled
    default: false
    type: boolean
    group: 'Upgrade Strategy'
    show_if: configMode=Advanced
    show_subquestion_if: true
    subquestions:
      - variable: cluster.config.upgradeStrategy
      - variable: cluster.config.upgradeStrategy.controlPlaneConcurrency
      - variable: cluster.config.upgradeStrategy.controlPlaneDrainOptions.enabled
      - variable: cluster.config.upgradeStrategy.controlPlaneDrainOptions.deleteEmptyDirData
      - variable: cluster.config.upgradeStrategy.controlPlaneDrainOptions.disableEviction
      - variable: cluster.config.upgradeStrategy.controlPlaneDrainOptions.force
      - variable: cluster.config.upgradeStrategy.controlPlaneDrainOptions.gracePeriod
      - variable: cluster.config.upgradeStrategy.controlPlaneDrainOptions.ignoreDaemonSets
      - variable: cluster.config.upgradeStrategy.controlPlaneDrainOptions.ignoreErrors
      - variable: cluster.config.upgradeStrategy.controlPlaneDrainOptions.skipWaitForDeleteTimeoutSeconds
      - variable: cluster.config.upgradeStrategy.controlPlaneDrainOptions.timeout
      - variable: cluster.config.upgradeStrategy.controlPlaneDrainOptions.enabled
      - variable: cluster.config.upgradeStrategy.workerConcurrency
      - variable: cluster.config.upgradeStrategy.workerDrainOptions.enabled
      - variable: cluster.config.upgradeStrategy.workerDrainOptions.deleteEmptyDirData
      - variable: cluster.config.upgradeStrategy.workerDrainOptions.disableEviction
      - variable: cluster.config.upgradeStrategy.workerDrainOptions.force
      - variable: cluster.config.upgradeStrategy.workerDrainOptions.gracePeriod
      - variable: cluster.config.upgradeStrategy.workerDrainOptions.ignoreDaemonSets
      - variable: cluster.config.upgradeStrategy.workerDrainOptions.ignoreErrors
      - variable: cluster.config.upgradeStrategy.workerDrainOptions.skipWaitForDeleteTimeoutSeconds
      - variable: cluster.config.upgradeStrategy.workerDrainOptions.timeout
      - variable: cluster.config.upgradeStrategy.workerDrainOptions.enabled

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~ Section: Addons ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # addons
  - variable: addons.monitoring.enabled
    default: false
    label: 'Enable Monitoring'
    description: 'Enable Rancher Monitoring'
    type: boolean
    group: 'Addons'
    show_subquestion_if: true
    subquestions:
      - variable: monitoring.version
        default:
        label: 'Monitoring Version'
        description: 'Choose chart version of monitoring. If empty latest version will be installed'
        type: string
        group: 'Addons'
      - variable: monitoring.values
        default:
        label: 'Monitoring Values'
        description: 'Custom monitoring chart values'
        type: multiline
        group: 'Addons'
  - variable: addons.longhorn.enabled
    default: false
    label: 'Enable Longhorn'
    description: 'Enable Rancher Longhorn'
    type: boolean
    group: 'Addons'
    show_subquestion_if: true
    subquestions:
      - variable: longhorn.version
        default:
        label: 'Longhorn Version'
        description: 'Choose chart version of longhorn. If empty latest version will be installed'
        type: string
        group: 'Addons'
      - variable: longhorn.values
        default:
        label: 'Longhorn Values'
        description: 'Custom longhorn chart values'
        type: multiline
        group: 'Addons'
  - variable: addons.neuvector.enabled
    default: false
    label: 'Enable Neuvector'
    description: 'Enable Rancher Neuvector'
    type: boolean
    group: 'Addons'
    show_subquestion_if: true
    subquestions:
      - variable: neuvector.version
        default:
        label: 'Neuvector Version'
        description: 'Choose chart version of neuvector. If empty latest version will be installed'
        type: string
        group: 'Addons'
      - variable: neuvector.values
        default:
        label: 'Neuvector Values'
        description: 'Custom neuvector chart values'
        type: multiline
        group: 'Addons'

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~ Section: Nodepool Generic ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # machinePool
  - variable: nodepools.0.name
    default:
    description: 'Specify nodepool name'
    type: string
    label: 'Nodepool name'
    required: true
    show_if: "(configMode=Advanced || configMode=Simple) && nodePoolTemplate=SinglePool"
    group: 'Nodepool Generic'
  - variable: nodepools.0.quantity
    default: 1
    description: 'Specify node count'
    type: int
    required: true
    show_if: "(configMode=Advanced || configMode=Simple) && nodePoolTemplate=SinglePool"
    label: 'Node count'
    group: 'Nodepool Generic'
  - variable: nodepools.0.etcd
    default: true
    label: etcd
    type: boolean
    show_if: "configMode=Advanced && nodePoolTemplate=SinglePool"
    group: 'Nodepool Generic'
  - variable: nodepools.0.controlplane
    label: controlplane
    default: true
    type: boolean
    show_if: "configMode=Advanced && nodePoolTemplate=SinglePool"
    group: 'Nodepool Generic'
  - variable: nodepools.0.worker
    default: true
    label: worker
    type: boolean
    show_if: "configMode=Advanced && nodePoolTemplate=SinglePool"
    group: 'Nodepool Generic'

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~ Section: Nodepool Generic Extra ~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  - variable: nodepools.0.labels
    group: 'Nodepool Generic Extra'
    show_if: "configMode=Advanced && nodePoolTemplate=SinglePool"
  - variable: nodepools.0.drainBeforeDelete
    group: 'Nodepool Generic Extra'
    show_if: "configMode=Advanced && nodePoolTemplate=SinglePool"
  - variable: nodepools.0.drainBeforeDeleteTimeout
    group: 'Nodepool Generic Extra'
    show_if: "configMode=Advanced && nodePoolTemplate=SinglePool"
  - variable: nodepools.0.machineDeploymentLabels
    group: 'Nodepool Generic Extra'
    show_if: "configMode=Advanced && nodePoolTemplate=SinglePool"
  - variable: nodepools.0.machineDeploymentAnnotations
    group: 'Nodepool Generic Extra'
    show_if: "configMode=Advanced && nodePoolTemplate=SinglePool"
  - variable: nodepools.0.paused
    group: 'Nodepool Generic Extra'
    show_if: "configMode=Advanced && nodePoolTemplate=SinglePool"
  - variable: nodepools.0.rollingUpdate
    group: 'Nodepool Generic Extra'
    show_if: "configMode=Advanced && nodePoolTemplate=SinglePool"
  - variable: nodepools.0.rollingUpdate.maxUnavailable
    group: 'Nodepool Generic Extra'
    show_if: "configMode=Advanced && nodePoolTemplate=SinglePool"
  - variable: nodepools.0.rollingUpdate.maxSurge
    group: 'Nodepool Generic Extra'
    show_if: "configMode=Advanced && nodePoolTemplate=SinglePool"
  - variable: nodepools.0.unhealthyNodeTimeout
    group: 'Nodepool Generic Extra'
    show_if: "configMode=Advanced && nodePoolTemplate=SinglePool"

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~ Section: Nodepool Openstack ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # openstack
  - variable: nodepools.0.openstackconfig.activeTimeout
    description: 'OpenStack active timeout'
    label: 'activeTimeout'
    default: '200'
    type: string
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.secretApplicationCredentials
    label: 'secretApplicationCredentials'
    type: string
    required: true
    description: 'Secret containing applicationCredentialId/applicationCredentialName and applicationCredentialSecret'
    show_if: "configMode=Advanced || configMode=Simple"
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.authUrl
    description: 'OpenStack authentication URL'
    label: 'authUrl'
    default: 'https://cloud.virtomat.net:5000/v3'
    type: string
    required: true
    show_if: 'configMode=Advanced'
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.flavorId
    description: 'OpenStack flavor id to use for the instance'
    label: 'flavorId'
    type: string
    show_if: 'configMode=Advanced'
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.flavorName
    description: 'OpenStack flavor name to use for the instance'
    label: 'flavorName'
    type: enum
    options:
      - m1.medium
    show_if: 'configMode=Advanced || configMode=Simple'
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.floatingipPool
    description: 'OpenStack floating IP pool to get an IP from to assign to the instance'
    label: 'floatingipPool'
    type: string
    default: 'office'
    show_if: 'configMode=Advanced'
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.imageId
    description: 'OpenStack image id to use for the instance'
    label: 'imageId'
    type: string
    show_if: 'configMode=Advanced'
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.imageName
    description: 'OpenStack image name to use for the instance'
    label: 'imageName'
    type: string
    default: 'ubuntu-22.04'
    show_if: 'configMode=Advanced || configMode=Simple'
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.netId
    description: 'OpenStack network id the machine will be connected on'
    label: 'netId'
    type: string
    show_if: 'configMode=Advanced'
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.netName
    description: 'OpenStack network name the machine will be connected on'
    label: 'netName'
    type: string
    default: 'local-net'
    show_if: 'configMode=Advanced || configMode=Simple'
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.keypairName
    description: 'OpenStack keypair to use to SSH to the instance'
    label: 'keypairName'
    type: string
    required: true
    show_if: 'configMode=Advanced || configMode=Simple'
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.region
    description: 'OpenStack region name'
    label: 'region'
    default: RegionOne
    type: string
    required: true
    show_if: 'configMode=Advanced || configMode=Simple'
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.secretprivateKeyFile
    description: 'File contents for privateKeyFile '
    label: 'secretprivateKeyFile'
    type: string
    default: 'openstack-privatekey'
    required: true
    show_if: 'configMode=Advanced || configMode=Simple'
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.secGroups
    description: 'OpenStack comma separated (no spaces in between) security groups for the machine'
    label: 'secGroups'
    type: string
    default: 'default'
    show_if: 'configMode=Advanced || configMode=Simple'
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.availabilityZone
    description: 'OpenStack availability zone'
    label: 'availabilityZone'
    type: string
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.bootFromVolume
    description: 'Enables Openstack instance to boot from volume as ROOT'
    label: 'bootFromVolume'
    default: 'false'
    type: boolean
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.cacert
    description: 'File contents for cacert'
    label: 'cacert'
    type: string
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.configDrive
    description: 'Enables the OpenStack config drive for the instance'
    label: 'configDrive'
    default: 'false'
    type: boolean
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.domainId
    description: 'OpenStack domain ID'
    label: 'domainId'
    type: string
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.domainName
    description: 'OpenStack domain name'
    label: 'domainName'
    default: default
    type: string
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.endpointType
    description: 'OpenStack endpoint type (adminURL, internalURL or publicURL)'
    label: 'endpointType'
    type: string
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.insecure
    description: 'Disable TLS credential checking'
    label: 'insecure'
    default: 'false'
    type: boolean
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.ipVersion
    description: 'OpenStack version of IP address assigned for the machine'
    label: 'ipVersion'
    default: '4'
    type: string
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.novaNetwork
    label: 'novaNetwork'
    default: 'false'
    type: boolean
    description: 'Use the nova networking services instead of neutron.'
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.sshPort
    description: 'OpenStack SSH port'
    label: 'sshPort'
    default: '22'
    type: string
    required: true
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.sshUser
    description: 'OpenStack SSH Username for VM login'
    label: 'sshUser'
    default: ubuntu
    type: string
    required: true
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.tenantDomainId
    label: 'tenantDomainId'
    type: string
    description: 'OpenStack tenant domain id'
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.tenantDomainName
    label: 'tenantDomainName'
    type: string
    description: 'OpenStack tenant domain name'
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.tenantId
    label: 'tenantId'
    type: string
    description: 'OpenStack tenant id'
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.tenantName
    label: 'tenantName'
    type: string
    description: 'OpenStack tenant name'
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.userDataFile
    label: 'userDataFile'
    default:
    type: multiline
    description: 'File contents for userDataFile'
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.userDomainId
    label: 'userDomainId'
    type: string
    description: 'OpenStack user domain id'
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.userDomainName
    label: 'userDomainName'
    type: string
    description: 'OpenStack user domain name'
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.userId
    label: 'userId'
    type: string
    description: 'OpenStack user-id'
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.username
    label: 'username'
    type: string
    description: 'OpenStack username'
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.volumeDevicePath
    label: 'volumeDevicePath'
    type: string
    description: "OpenStack volume device path (attaching); Omit for auto '/dev/vdb'"
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.volumeId
    label: 'volumeId'
    type: string
    description: 'OpenStack volume id (existing)'
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.volumeName
    label: 'volumeName'
    type: string
    description: 'OpenStack volume name (creating)'
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.volumeSize
    label: 'volumeSize'
    type: string
    description: 'OpenStack volume size (GiB) when creating a volume'
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
  - variable: nodepools.0.openstackconfig.volumeType
    label: 'volumeType'
    type: string
    description: 'OpenStack volume type (ssd, ...)'
    show_if: configMode=Advanced
    group: 'Nodepool Openstack'
