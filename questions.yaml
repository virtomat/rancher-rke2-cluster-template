# yamllint disable rule:document-start
# yamllint disable rule:line-length

# https://github.com/rancher/questions-yml-examples

questions:
  # general
  - variable: cloudprovider
    default: custom
    description: 'Specify Infrastructure provider for underlying nodes'
    label: 'Infrastructure Provider'
    type: enum
    required: true
    options:
      - openstack
      # - amazonec2
      # - azure
      # - digitalocean
      # - elemental
      # - harvester
      # - vsphere
      - custom
    group: 'General'
  - variable: cluster.name
    default: mycluster
    description: 'Specify the name of the cluster'
    label: 'Cluster Name'
    required: true
    type: string
    group: 'General'
  - variable: cluster.labels
    label: 'labels'
    type: labels
    description: 'Cluster labels'
    group: 'General'
  - variable: cluster.annotations
    label: 'annotations'
    type: annotations
    description: 'Cluster annotations'
    group: 'General'
  - variable: cluster.description
    label: 'description'
    type: string
    description: 'Cluster annotations'
    group: 'General'
  - variable: cluster.config.agentEnvs
    label: 'agentEnvs'
    type: string
    description: 'Cluster agentEnvs'
    group: 'General'
  - variable: cluster.config.cloudCredentialSecretName
    default:
    description: 'CloudCredentialName for provisioning cluster'
    label: 'CloudCredential Name'
    type: cloudcredential
    group: 'General'
  - variable: cluster.config.defaultClusterRoleForProjectMembers
    label: 'defaultClusterRoleForProjectMembers'
    type: string
    description: 'Default cluster role for project members'
    group: 'General'
  - variable: cluster.config.defaultPodSecurityAdmissionConfigurationTemplateName
    label: 'defaultPodSecurityAdmissionConfigurationTemplateName'
    type: string
    description: 'Default pod security admission configuration template name'
    group: 'General'
  - variable: cluster.config.defaultPodSecurityPolicyTemplateName
    label: 'defaultPodSecurityPolicyTemplateName'
    type: string
    description: 'Default pod security policy template name'
    group: 'General'
  - variable: cluster.config.enableNetworkPolicy
    label: 'enableNetworkPolicy'
    default: false
    type: boolean
    description: 'Enable network policy'
    group: 'General'
  - variable: cluster.config.kubernetesVersion
    default: v1.30.4+rke2r1
    description: 'Specify Kubernetes Version'
    label: 'Kubernetes Version'
    type: enum
    required: true
    options:
      - v1.26.15+rke2r1
      - v1.27.16+rke2r1
      - v1.28.13+rke2r1
      - v1.29.8+rke2r1
      - v1.30.4+rke2r1
    group: 'General'
  - variable: cluster.config.localClusterAuthEndpoint.enabled
    default: false
    label: 'Local Auth Access Endpoint'
    description: 'Enable Local Auth Access Endpoint'
    type: boolean
    group: 'Auth Access Endpoint'
    show_subquestion_if: true
    subquestions:
      - variable: localClusterAuthEndpoint.fqdn
        default:
        description: 'Local Auth Access Endpoint FQDN'
        label: 'Auth Endpoint FQDN'
        type: hostname
        group: 'Auth Access Endpoint'
      - variable: localClusterAuthEndpoint.caCerts
        default:
        label: 'Auth Endpoint Cacerts'
        description: 'Local Auth Access Endpoint CACerts'
        type: multiline
        group: 'Auth Access Endpoint'

  # rke config

  # machine selector config

  # registries
  - variable: cluster.config.registries.enabled
  - variable: cluster.config.registries.configs # list
    # authConfigSecretName
    # caBundle
    # insecureSkipVerify
    # tlsSecretName
  - variable: cluster.config.registries.mirrors # list
    # endpoints
    # rewrite # dict list

  # upgrade strategy
  - variable: cluster.config.upgradeStrategy
  - variable: cluster.config.upgradeStrategy.controlPlaneConcurrency
  - variable: cluster.config.upgradeStrategy.controlPlaneDrainOptions.enabled
  - variable: cluster.config.upgradeStrategy.controlPlaneDrainOptions.deleteEmptyDirData
  - variable: cluster.config.upgradeStrategy.controlPlaneDrainOptions.disableEviction
  - variable: cluster.config.upgradeStrategy.controlPlaneDrainOptions.force
  - variable: cluster.config.upgradeStrategy.controlPlaneDrainOptions.gracePeriod
  - variable: cluster.config.upgradeStrategy.controlPlaneDrainOptions.ignoreDaemonSets
  - variable: cluster.config.upgradeStrategy.controlPlaneDrainOptions.ignoreErrors
  - variable: cluster.config.upgradeStrategy.controlPlaneDrainOptions.skipWaitForDeleteTimeoutSeconds
  - variable: cluster.config.upgradeStrategy.controlPlaneDrainOptions.timeout
  - variable: cluster.config.upgradeStrategy.controlPlaneDrainOptions.enabled
  - variable: cluster.config.upgradeStrategy.workerConcurrency
  - variable: cluster.config.upgradeStrategy.workerDrainOptions.enabled
  - variable: cluster.config.upgradeStrategy.workerDrainOptions.deleteEmptyDirData
  - variable: cluster.config.upgradeStrategy.workerDrainOptions.disableEviction
  - variable: cluster.config.upgradeStrategy.workerDrainOptions.force
  - variable: cluster.config.upgradeStrategy.workerDrainOptions.gracePeriod
  - variable: cluster.config.upgradeStrategy.workerDrainOptions.ignoreDaemonSets
  - variable: cluster.config.upgradeStrategy.workerDrainOptions.ignoreErrors
  - variable: cluster.config.upgradeStrategy.workerDrainOptions.skipWaitForDeleteTimeoutSeconds
  - variable: cluster.config.upgradeStrategy.workerDrainOptions.timeout
  - variable: cluster.config.upgradeStrategy.workerDrainOptions.enabled

  # addons
  - variable: addons.monitoring.enabled
    default: false
    label: 'Enable Monitoring'
    description: 'Enable Rancher Monitoring'
    type: boolean
    group: 'Addons'
    show_subquestion_if: true
    subquestions:
      - variable: monitoring.version
        default:
        label: 'Monitoring Version'
        description: 'Choose chart version of monitoring. If empty latest version will be installed'
        type: string
        group: 'Addons'
      - variable: monitoring.values
        default:
        label: 'Monitoring Values'
        description: 'Custom monitoring chart values'
        type: multiline
        group: 'Addons'
  - variable: addons.longhorn.enabled
    default: false
    label: 'Enable Longhorn'
    description: 'Enable Rancher Longhorn'
    type: boolean
    group: 'Addons'
    show_subquestion_if: true
    subquestions:
      - variable: longhorn.version
        default:
        label: 'Longhorn Version'
        description: 'Choose chart version of longhorn. If empty latest version will be installed'
        type: string
        group: 'Addons'
      - variable: longhorn.values
        default:
        label: 'Longhorn Values'
        description: 'Custom longhorn chart values'
        type: multiline
        group: 'Addons'
  - variable: addons.neuvector.enabled
    default: false
    label: 'Enable Neuvector'
    description: 'Enable Rancher Neuvector'
    type: boolean
    group: 'Addons'
    show_subquestion_if: true
    subquestions:
      - variable: neuvector.version
        default:
        label: 'Neuvector Version'
        description: 'Choose chart version of neuvector. If empty latest version will be installed'
        type: string
        group: 'Addons'
      - variable: neuvector.values
        default:
        label: 'Neuvector Values'
        description: 'Custom neuvector chart values'
        type: multiline
        group: 'Addons'

  # machinePool
  - variable: nodepools.0.name
    default:
    description: 'Specify nodepool name'
    type: string
    label: 'Nodepool name'
    required: true
    show_if: cloudprovider=openstack || cloudprovider=amazonec2 || cloudprovider=vsphere || cloudprovider=azure || cloudprovider=digitalocean || cloudprovider=harvester || cloudprovider=elemental
    group: 'Nodepools'
  - variable: nodepools.0.quantity
    default: 1
    description: 'Specify node count'
    type: int
    required: true
    show_if: cloudprovider=openstack || cloudprovider=amazonec2 || cloudprovider=vsphere || cloudprovider=azure || cloudprovider=digitalocean || cloudprovider=harvester || cloudprovider=elemental
    label: 'Node count'
    group: 'Nodepools'
  - variable: nodepools.0.etcd
    default: true
    label: etcd
    type: boolean
    show_if: cloudprovider=openstack || cloudprovider=amazonec2 || cloudprovider=vsphere || cloudprovider=azure || cloudprovider=digitalocean || cloudprovider=harvester || cloudprovider=elemental
    group: 'Nodepools'
  - variable: nodepools.0.controlplane
    label: controlplane
    default: true
    type: boolean
    show_if: cloudprovider=openstack || cloudprovider=amazonec2 || cloudprovider=vsphere || cloudprovider=azure || cloudprovider=digitalocean || cloudprovider=harvester || cloudprovider=elemental
    group: 'Nodepools'
  - variable: nodepools.0.worker
    default: true
    label: worker
    type: boolean
    show_if: cloudprovider=openstack || cloudprovider=amazonec2 || cloudprovider=vsphere || cloudprovider=azure || cloudprovider=digitalocean || cloudprovider=harvester || cloudprovider=elemental
    group: 'Nodepools'
  - variable: nodepools.0.labels
  - variable: nodepools.0.drainBeforeDelete
  - variable: nodepools.0.drainBeforeDeleteTimeout
  - variable: nodepools.0.machineDeploymentLabels
  - variable: nodepools.0.machineDeploymentAnnotations
  - variable: nodepools.0.paused
  - variable: nodepools.0.rollingUpdate
  - variable: nodepools.0.rollingUpdate.maxUnavailable
  - variable: nodepools.0.rollingUpdate.maxSurge
  - variable: nodepools.0.unhealthyNodeTimeout

  # openstack
  - variable: nodepools.0.openstackconfig.activeTimeout
    label: 'activeTimeout'
    default: '200'
    type: string
    description: 'OpenStack active timeout'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.secretApplicationCredentials
    label: 'secretApplicationCredentials'
    type: string
    description: 'Secret containing applicationCredentialId/applicationCredentialName and applicationCredentialSecret'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.authUrl
    label: 'authUrl'
    type: string
    description: 'OpenStack authentication URL'
    required: true
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.availabilityZone
    label: 'availabilityZone'
    type: string
    description: 'OpenStack availability zone'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.bootFromVolume
    label: 'bootFromVolume'
    default: false
    type: boolean
    description: 'Enables Openstack instance to boot from volume as ROOT'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.cacert
    label: 'cacert'
    type: string
    description: 'File contents for cacert'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.configDrive
    label: 'configDrive'
    default: false
    type: boolean
    description: 'Enables the OpenStack config drive for the instance'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.domainId
    label: 'domainId'
    type: string
    description: 'OpenStack domain ID'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.domainName
    label: 'domainName'
    default: default
    type: string
    description: 'OpenStack domain name'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.endpointType
    label: 'endpointType'
    type: string
    description: 'OpenStack endpoint type (adminURL, internalURL or publicURL)'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.flavorId
    label: 'flavorId'
    type: string
    description: 'OpenStack flavor id to use for the instance'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.flavorName
    label: 'flavorName'
    type: string
    description: 'OpenStack flavor name to use for the instance'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.floatingipPool
    label: 'floatingipPool'
    type: string
    description: 'OpenStack floating IP pool to get an IP from to assign to the instance'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.imageId
    label: 'imageId'
    type: string
    description: 'OpenStack image id to use for the instance'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.imageName
    label: 'imageName'
    type: string
    description: 'OpenStack image name to use for the instance'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.insecure
    label: 'insecure'
    default: false
    type: boolean
    description: 'Disable TLS credential checking'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.ipVersion
    label: 'imageName'
    default: '4'
    type: string
    description: 'OpenStack version of IP address assigned for the machine'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.keypairName
    label: 'keypairName'
    type: string
    description: 'OpenStack keypair to use to SSH to the instance'
    required: true
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.netId
    label: 'netId'
    type: string
    description: 'OpenStack network id the machine will be connected on'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.netName
    label: 'netName'
    type: string
    description: 'OpenStack network name the machine will be connected on'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.novaNetwork
    label: 'novaNetwork'
    default: false
    type: boolean
    description: 'Use the nova networking services instead of neutron.'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.secretprivateKeyFile
    label: 'secretprivateKeyFile'
    type: string
    description: 'File contents for privateKeyFile '
    required: true
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.region
    label: 'region'
    default: RegionOne
    type: string
    description: 'OpenStack region name'
    required: true
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.secGroups
    label: 'secGroups'
    type: string
    description: 'OpenStack comma separated (no spaces in between) security groups for the machine'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.sshPort
    label: 'sshPort'
    default: '22'
    type: string
    description: 'OpenStack SSH port'
    required: true
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.sshUser
    label: 'sshUser'
    default: ubuntu
    type: string
    description: 'OpenStack SSH Username for VM login'
    required: true
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.tenantDomainId
    label: 'tenantDomainId'
    type: string
    description: 'OpenStack tenant domain id'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.tenantDomainName
    label: 'tenantDomainName'
    type: string
    description: 'OpenStack tenant domain name'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.tenantId
    label: 'tenantId'
    type: string
    description: 'OpenStack tenant id'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.tenantName
    label: 'tenantName'
    type: string
    description: 'OpenStack tenant name'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.userDataFile
    label: 'userDataFile'
    default:
    type: multiline
    description: 'File contents for userDataFile'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.userDomainId
    label: 'userDomainId'
    type: string
    description: 'OpenStack user domain id'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.userDomainName
    label: 'userDomainName'
    type: string
    description: 'OpenStack user domain name'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.userId
    label: 'userId'
    type: string
    description: 'OpenStack user-id'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.username
    label: 'username'
    type: string
    description: 'OpenStack username'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.volumeDevicePath
    label: 'volumeDevicePath'
    type: string
    description: "OpenStack volume device path (attaching); Omit for auto '/dev/vdb'"
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.volumeId
    label: 'volumeId'
    type: string
    description: 'OpenStack volume id (existing)'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.volumeName
    label: 'volumeName'
    type: string
    description: 'OpenStack volume name (creating)'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.volumeSize
    label: 'volumeSize'
    type: string
    description: 'OpenStack volume size (GiB) when creating a volume'
    show_if: cloudprovider=openstack
    group: 'Nodepools'
  - variable: nodepools.0.openstackconfig.volumeType
    label: 'volumeType'
    type: string
    description: 'OpenStack volume type (ssd, ...)'
    show_if: cloudprovider=openstack
    group: 'Nodepools'

  # amazonec2
  - variable: nodepools.0.amazonec2config.region
    label: 'Region'
    default: us-east-1
    type: string
    description: 'AWS EC2 Region'
    required: true
    show_if: cloudprovider=amazonec2
    group: 'Nodepools'
  - variable: nodepools.0.amazonec2config.zone
    label: 'Zone'
    default: a
    type: string
    description: 'AWS EC2 Zone'
    required: true
    show_if: cloudprovider=amazonec2
    group: 'Nodepools'
  - variable: nodepools.0.amazonec2config.instanceType
    label: 'Instance Type'
    default: t3a.medium
    type: string
    description: 'AWS instance type'
    required: true
    show_if: cloudprovider=amazonec2
    group: 'Nodepools'
  - variable: nodepools.0.amazonec2config.rootSize
    label: 'Root Disk Size'
    default: 16g
    type: string
    description: 'AWS EC2 root disk size'
    show_if: cloudprovider=amazonec2
    group: 'Nodepools'
  - variable: nodepools.0.amazonec2config.vpcId
    label: 'VPC/SUBNET'
    default: ''
    type: string
    description: 'AWS EC2 vpc ID'
    required: true
    show_if: cloudprovider=amazonec2
    group: 'Nodepools'
  - variable: nodepools.0.amazonec2config.iamInstanceProfile
    label: 'Instance Profile Name'
    default: ''
    type: string
    description: 'AWS EC2 Instance Profile Name'
    show_if: cloudprovider=amazonec2
    group: 'Nodepools'
  - variable: nodepools.0.amazonec2config.ami
    label: 'AMI ID'
    default: ''
    type: string
    description: 'AWS EC2 AMI ID'
    show_if: cloudprovider=amazonec2
    group: 'Nodepools'
  - variable: nodepools.0.amazonec2config.sshUser
    label: 'SSH Username for AMI'
    default: ubuntu
    type: string
    description: 'AWS EC2 SSH Username for AMI'
    show_if: cloudprovider=amazonec2
    group: 'Nodepools'
  - variable: nodepools.0.amazonec2config.createSecurityGroup
    label: 'Create security group'
    default: true
    type: boolean
    description: 'Whether to create `rancher-node` security group. If false, can provide with existing security group'
    show_if: cloudprovider=amazonec2
    group: 'Nodepools'
    show_subquestion_if: false
    subquestions:
      - variable: nodepools.0.securityGroups
        label: 'Security groups'
        default:
        type: string
        description: 'Using existing security groups'
        group: 'Nodepools'

  # vsphere
  - variable: nodepools.0.vsphereconfig.vcenter
    label: 'vSphere IP/hostname'
    default: ''
    type: hostname
    description: 'vSphere IP/hostname for vCenter'
    required: true
    show_if: cloudprovider=vsphere
    group: 'Nodepools'
  - variable: nodepools.0.vsphereconfig.datacenter
    label: 'Vsphere Datacenter'
    default: ''
    type: hostname
    description: 'vSphere datacenter for virtual machine'
    required: true
    show_if: cloudprovider=vsphere
    group: 'Nodepools'
  - variable: nodepools.0.vsphereconfig.datastore
    label: 'Vsphere Datastore'
    default: ''
    type: string
    description: 'vSphere datastore for virtual machine'
    required: true
    show_if: cloudprovider=vsphere
    group: 'Nodepools'
  - variable: nodepools.0.vsphereconfig.datastoreCluster
    label: 'Vsphere DatastoreCluster'
    default: ''
    type: string
    description: 'vSphere datastore cluster for virtual machine'
    required: true
    show_if: cloudprovider=vsphere
    group: 'Nodepools'
  - variable: nodepools.0.vsphereconfig.diskSize
    label: 'Disk Size'
    default: '20480'
    type: string
    description: 'vSphere size of disk for docker VM (in MB)'
    show_if: cloudprovider=vsphere
    group: 'Nodepools'
  - variable: nodepools.0.vsphereconfig.memorySize
    label: 'Memory Size'
    default: '2048'
    type: string
    description: 'vSphere size of memory for docker VM (in MB)'
    show_if: cloudprovider=vsphere
    group: 'Nodepools'
  - variable: nodepools.0.vsphereconfig.network
    label: 'Network'
    default: ''
    type: string
    description: 'vSphere network where the virtual machine will be attached'
    show_if: cloudprovider=vsphere
    group: 'Nodepools'
  - variable: nodepools.0.vsphereconfig.pool
    label: 'Resource Pool'
    default: ''
    type: string
    description: 'vSphere resource pool for docker VM'
    show_if: cloudprovider=vsphere
    group: 'Nodepools'
  - variable: nodepools.0.vsphereconfig.sshPort
    label: 'SSH Port'
    default: '22'
    type: string
    description: 'If using a non-B2D image you can specify the ssh port'
    show_if: cloudprovider=vsphere
    group: 'Nodepools'
  - variable: nodepools.0.vsphereconfig.sshUserGroup
    label: 'SSH User Group'
    default: docker:staff
    type: hostname
    description: "If using a non-B2D image the uploaded keys will need chown'ed, defaults to staff e.g. docker:staff"
    show_if: cloudprovider=vsphere
    group: 'Nodepools'
  - variable: nodepools.0.vsphereconfig.vappIpallocationpolicy
    label: 'IP allocation policy'
    default: ''
    type: enum
    options:
      - dhcp
      - fixed
      - transient
      - fixedAllocated
    description: "'vSphere vApp IP allocation policy. Supported values are: dhcp, fixed, transient and fixedAllocated'"
    show_if: cloudprovider=vsphere
    group: 'Nodepools'
  - variable: nodepools.0.vsphereconfig.vappIpprotocol
    label: 'IP protocol'
    default: ''
    type: enum
    options:
      - IPv4
      - IPv6
    description: "'vSphere vApp IP protocol for this deployment. Supported values are: IPv4 and IPv6'"
    show_if: cloudprovider=vsphere
    group: 'Nodepools'

  # harvester
  - variable: nodepools.0.harvesterconfig.diskSize
    label: 'Disk Size'
    default: 40
    type: string
    description: 'Size of virtual hard disk in GB'
    show_if: cloudprovider=harvester
    group: 'Nodepools'
  - variable: nodepools.0.harvesterconfig.diskBus
    label: 'Disk Bus Type'
    default: string
    type: virtio
    description: 'harvester disk type'
    show_if: cloudprovider=harvester
    group: 'Nodepools'
  - variable: nodepools.0.harvesterconfig.cpuCount
    label: 'CPUs'
    default: 2
    type: string
    description: 'number of CPUs for your VM'
    show_if: cloudprovider=harvester
    group: 'Nodepools'
  - variable: nodepools.0.harvesterconfig.memorySize
    label: 'Memory Size'
    default: 4
    type: string
    description: 'Memory for VM in GB (available RAM)'
    show_if: cloudprovider=harvester
    group: 'Nodepools'
  - variable: nodepools.0.harvesterconfig.networkName
    label: 'Network'
    default: default/network-name-1
    type: string
    description: 'Name of vlan network in harvester'
    show_if: cloudprovider=harvester
    group: 'Nodepools'
  - variable: nodepools.0.harvesterconfig.imageName
    label: 'Name of Image'
    default: default/image-rand
    type: string
    description: 'Name of image in harvester'
    show_if: cloudprovider=harvester
    group: 'Nodepools'
  - variable: nodepools.0.harvesterconfig.vmNamespace
    label: 'vm Namespace'
    default: default
    type: string
    description: 'namespace to deploy the VM to'
    show_if: cloudprovider=harvester
    group: 'Nodepools'
  - variable: nodepools.0.harvesterconfig.sshUser
    label: 'SSH User'
    default: ubuntu
    type: string
    description: 'SSH username'
    show_if: cloudprovider=harvester
    group: 'Nodepools'

  # digitalocean
  - variable: nodepools.0.digitaloceanconfig.image
    label: 'Image'
    default: ubuntu-20-04-x64
    type: string
    description: 'Digital Ocean Image'
    show_if: cloudprovider=digitalocean
    group: 'Nodepools'
  - variable: nodepools.0.digitaloceanconfig.backups
    label: 'Backup'
    default: false
    type: boolean
    description: 'enable backups for droplet'
    show_if: cloudprovider=digitalocean
    group: 'Nodepools'
  - variable: nodepools.0.digitaloceanconfig.ipv6
    label: 'IPv6'
    default: false
    type: boolean
    description: 'enable ipv6 for droplet'
    show_if: cloudprovider=digitalocean
    group: 'Nodepools'
  - variable: nodepools.0.digitaloceanconfig.monitoring
    label: 'Monitoring'
    default: false
    type: boolean
    description: 'enable monitoring for droplet'
    show_if: cloudprovider=digitalocean
    group: 'Nodepools'
  - variable: nodepools.0.digitaloceanconfig.privateNetworking
    label: 'Private Networking'
    default: false
    type: boolean
    description: 'enable private networking for droplet'
    show_if: cloudprovider=digitalocean
    group: 'Nodepools'
  - variable: nodepools.0.digitaloceanconfig.region
    label: 'Region'
    default: sfo3
    type: string
    description: 'Digital Ocean region'
    show_if: cloudprovider=digitalocean
    group: 'Nodepools'
  - variable: nodepools.0.digitaloceanconfig.size
    label: 'Size'
    default: s-4vcpu-8gb
    type: string
    description: 'Digital Ocean size'
    show_if: cloudprovider=digitalocean
    group: 'Nodepools'
  - variable: nodepools.0.digitaloceanconfig.userdata
    label: 'Userdata'
    default:
    type: multiline
    description: 'File contents for userdata'
    show_if: cloudprovider=digitalocean
    group: 'Nodepools'
  - variable: nodepools.0.digitaloceanconfig.sshPort
    label: 'SSH Port'
    default: 22
    type: string
    description: 'SSH port'
    show_if: cloudprovider=digitalocean
    group: 'Nodepools'
  - variable: nodepools.0.digitaloceanconfig.sshUser
    label: 'SSH User'
    default: root
    type: string
    description: 'SSH username'
    show_if: cloudprovider=digitalocean
    group: 'Nodepools'

  # azure
  - variable: nodepools.0.azureconfig.availabilitySet
    label: 'Availability Set'
    default: docker-machine
    type: string
    description: 'Azure Availability Set to place the virtual machine into'
    show_if: cloudprovider=azure
    group: 'Nodepools'
  - variable: nodepools.0.azureconfig.diskSize
    label: 'Disk Size'
    default: ''
    type: string
    description: 'Disk size if using managed disk(Gib)'
    show_if: cloudprovider=azure
    group: 'Nodepools'
  - variable: nodepools.0.azureconfig.dns
    label: 'DNS'
    default: ''
    type: string
    description: 'A unique DNS label for the public IP adddress'
    show_if: cloudprovider=azure
    group: 'Nodepools'
  - variable: nodepools.0.azureconfig.environment
    label: 'Environment'
    default: AzurePublicCloud
    type: enum
    options:
      - AzurePublicCloud
      - AzureGermanCloud
      - AzureChinaCloud
      - AzureUSGovernmentCloud
    description: 'Azure environment'
    show_if: cloudprovider=azure
    group: 'Nodepools'
  - variable: nodepools.0.azureconfig.faultDomainCount
    label: 'Fault Domain Count'
    default: ''
    type: string
    description: 'Fault domain count to use for availability set'
    show_if: cloudprovider=azure
    group: 'Nodepools'
  - variable: nodepools.0.azureconfig.image
    label: 'Image'
    default: canonical:UbuntuServer:18.04-LTS:latest
    type: string
    description: 'Azure virtual machine OS image'
    show_if: cloudprovider=azure
    group: 'Nodepools'
  - variable: nodepools.0.azureconfig.location
    label: 'Location'
    default: westus
    type: string
    description: 'Azure region to create the virtual machine'
    show_if: cloudprovider=azure
    group: 'Nodepools'
  - variable: nodepools.0.azureconfig.managedDisks
    label: 'Managed Disks'
    default: false
    type: boolean
    description: 'Configures VM and availability set for managed disks'
    show_if: cloudprovider=azure
    group: 'Nodepools'
  - variable: nodepools.0.azureconfig.noPublicIp
    label: 'No Public IP'
    default: false
    type: boolean
    description: 'Do not create a public IP address for the machine'
    show_if: cloudprovider=azure
    group: 'Nodepools'
  - variable: nodepools.0.azureconfig.privateIpAddress
    label: 'Private IP Address'
    default: ''
    type: string
    description: 'Specify a static private IP address for the machine'
    show_if: cloudprovider=azure
    group: 'Nodepools'
  - variable: nodepools.0.azureconfig.resourceGroup
    label: 'Resource Group'
    default: docker-machine
    type: string
    description: 'Azure Resource Group name (will be created if missing)'
    show_if: cloudprovider=azure
    group: 'Nodepools'
  - variable: nodepools.0.azureconfig.size
    label: 'Size'
    default: 'Standard_D2_v2'
    type: string
    description: 'Size for Azure Virtual Machine'
    show_if: cloudprovider=azure
    group: 'Nodepools'
  - variable: nodepools.0.azureconfig.sshUser
    label: 'SSH Username'
    default: docker-user
    type: string
    description: 'Username for SSH login'
    show_if: cloudprovider=azure
    group: 'Nodepools'
  - variable: nodepools.0.azureconfig.staticPublicIp
    label: 'Static Public IP'
    default: false
    type: boolean
    description: 'Assign a static public IP address to the machine'
    show_if: cloudprovider=azure
    group: 'Nodepools'
  - variable: nodepools.0.azureconfig.storageType
    label: 'Storage Account'
    default: 'Standard_LRS'
    type: string
    description: 'Type of Storage Account to host the OS Disk for the machine'
    show_if: cloudprovider=azure
    group: 'Nodepools'
  - variable: nodepools.0.azureconfig.subnet
    label: 'Subnet'
    default: docker-machine
    type: string
    description: 'Azure Subnet Name to be used within the Virtual Network'
    show_if: cloudprovider=azure
    group: 'Nodepools'
  - variable: nodepools.0.azureconfig.subnetPrefix
    label: 'Subnet Prefix'
    default: '192.168.0.0/16'
    type: string
    description: 'Private CIDR block to be used for the new subnet, should comply RFC 1918'
    show_if: cloudprovider=azure
    group: 'Nodepools'
  - variable: nodepools.0.azureconfig.updateDomainCount
    label: 'Update Domain Count'
    default: ''
    type: string
    description: 'Update domain count to use for availability set'
    show_if: cloudprovider=azure
    group: 'Nodepools'
  - variable: nodepools.0.azureconfig.usePrivateIp
    label: 'Use Private IP'
    default: false
    type: boolean
    description: 'Azure Subnet Name to be used within the Virtual Network'
    show_if: cloudprovider=azure
    group: 'Nodepools'
  - variable: nodepools.0.azureconfig.vnet
    label: 'Vnet'
    default: 'docker-machine-vnet'
    type: string
    description: 'Azure Virtual Network name to connect the virtual machine (in [resourcegroup:]name format)'
    show_if: cloudprovider=azure
    group: 'Nodepools'